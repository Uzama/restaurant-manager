schema {
    query: Query
    mutation: Mutation
}

type Query {
    getMenue(restaurantUsername:String!): [MenueItem]
    getRestaurant(id:String!): Restaurant!
    listOrder(filter:ListOrder!): [Order]
    listInvoice: [Invoice]
}

type Mutation {
    addMenueItem(input: AddMenueItem!): MenueItem
    deleteMenueItem(id:String!): String
    createRestaurant(input: CreateRestaurant!): Restaurant
    deleteRestaurant(username:String!): String
    createOrder(input: CreateOrder!): Order
    deleteOrder(id:String!): String
    addOrderItem(input: CreateOrderItem): OrderItem
    updateOrderItem(input: UpdateOrderItem): OrderItem
    removeOrderItem(input: RemoveOrderItem): String
    createInvoice(input: CreateInvoice!): Invoice
}

type MenueItem {
    id: String
    name: String!
    description: String
    price: Int!
}

input AddMenueItem {
    restaurantUsername: String!
    name: String!
    description: String
    price: Int!
}

type Restaurant {
    username: String!
    name: String!
    address: String
    phone: String
}

input CreateRestaurant {
    email: String!
    password: String!
    name: String!
    address: String
    phone: String
}

type Order {
    id: String!
    restaurant_username: String!
    customer_name: String!
    customer_phone: String!
    order_status: OrderStatus
    order_date: String
}

input CreateOrder {
    restaurantUsername: String!
    customerName: String!
    customerPhone: String!
}

input ListOrder {
    restaurantUsername: String!
    status: OrderStatus
}

enum OrderStatus {
	received
	preparing
	done
}

type OrderItem {
    id: ID!
    orderId: String!
    menueItemId: String!
    quantity: Int!
}

input CreateOrderItem {
    orderId: String!
    menueItemId: String!
    quantity: Int!
}

input UpdateOrderItem {
    orderId: String!
    menueItemId: String!
    quantity: Int!
}

input RemoveOrderItem {
    orderId: String!
    menueItemId: String!
}

type Invoice {
    id: ID!
    orderId: String!
    amount: Int!
    paymentDate: String
}

input CreateInvoice {
    orderId: String!
}